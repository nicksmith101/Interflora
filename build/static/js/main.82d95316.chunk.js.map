{"version":3,"sources":["Table.js","Form.js","App.js","index.js"],"names":["TableBody","props","rowcontents","entryData","map","innerStuff","index","react_default","a","createElement","className","key","greeting","category","onClick","removeEntry","Table","_this$props","this","Table_TableBody","Component","Form","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleChange","event","_event$target","target","name","value","setState","defineProperty","submitForm","handleSubmit","state","initialState","_this$state","onChange","type","defaultValue","disabled","App","entries","window","confirm","filter","entry","i","toConsumableArray","concat","src_Form","src_Table","ReactDOM","render","src_App","document","getElementById"],"mappings":"uOAGUA,EAAY,SAACC,GAEf,IAAMC,EAAcD,EAAME,UAAUC,IAAK,SAACC,EAAYC,GAClD,OACIC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WAAWC,IAAKL,GAC3BC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBAAsBL,EAAWO,UAEhDL,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBAAgBL,EAAWQ,UAC1CN,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBAAeH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,eAAeI,QAAS,kBAAMb,EAAMc,YAAYT,KAAlE,eAOlD,OAAOC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aAAaR,IAwBxBc,mLAlBE,IAAAC,EAE0BC,KAAKjB,MAAhCE,EAFCc,EAEDd,UAAWY,EAFVE,EAEUF,YAEf,OACAR,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eAEXH,EAAAC,EAAAC,cAACU,EAAD,CACAhB,UAAWA,EACXY,YAAaA,aAZTK,oBCuDTC,cA3EX,SAAAA,EAAYpB,GAAO,IAAAqB,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAL,KAAAG,IACfC,EAAAC,OAAAE,EAAA,EAAAF,CAAAL,KAAAK,OAAAG,EAAA,EAAAH,CAAAF,GAAAM,KAAAT,KAAMjB,KAWV2B,aAAe,SAAAC,GAAS,IAAAC,EAEED,EAAME,OAArBC,EAFaF,EAEbE,KAAMC,EAFOH,EAEPG,MACbX,EAAKY,SAALX,OAAAY,EAAA,EAAAZ,CAAA,GAAiBS,EAAOC,KAfTX,EAkBnBc,WAAa,WACTd,EAAKrB,MAAMoC,aAAaf,EAAKgB,OAC7BhB,EAAKY,SAASZ,EAAKiB,eAjBnBjB,EAAKiB,aAAe,CACZ3B,SAAU,GACVC,SAAU,IAGlBS,EAAKgB,MAAQhB,EAAKiB,aARHjB,wEAwBnB,IAAAkB,EACiCtB,KAAKoB,MAA3B1B,EADX4B,EACW5B,SAAUC,EADrB2B,EACqB3B,SAEjB,OAEIN,EAAAC,EAAAC,cAAA,YACIF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACXH,EAAAC,EAAAC,cAAA,+BACAF,EAAAC,EAAAC,cAAA,YACAuB,KAAK,WACLC,MAAOrB,EACP6B,SAAUvB,KAAKU,gBAInBrB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,qCACAF,EAAAC,EAAAC,cAAA,SACIiC,KAAK,OACLV,KAAK,WACLC,MAAOpB,EACP4B,SAAUvB,KAAKU,gBAKvBrB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACXH,EAAAC,EAAAC,cAAA,uCAEAF,EAAAC,EAAAC,cAAA,UAAQwB,MAAOpB,EAAUmB,KAAK,WAAWS,SAAUvB,KAAKU,cACpDrB,EAAAC,EAAAC,cAAA,UAAQkC,cAAY,EAACV,MAAM,sBAA3B,cACA1B,EAAAC,EAAAC,cAAA,UAAQwB,MAAM,YAAd,YACA1B,EAAAC,EAAAC,cAAA,UAAQwB,MAAM,aAAd,aACA1B,EAAAC,EAAAC,cAAA,UAAQwB,MAAM,eAAd,eACA1B,EAAAC,EAAAC,cAAA,UAAQwB,MAAM,WAAd,aAIR1B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACXH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,eAAegC,KAAK,SAASE,WAAY1B,KAAKoB,MAAM1B,UAAYM,KAAKoB,MAAMzB,UAC5EoB,MAAM,OACNnB,QAASI,KAAKkB,sBAlE/BhB,aC8EJyB,6MAzEXP,MAAQ,CAEJQ,QAAU,MAKd/B,YAAc,SAACT,GAAU,IAEdwC,EAAWxB,EAAKgB,MAAhBQ,QAEHC,OAAOC,QAAQ,0BACf1B,EAAKY,SAAS,CACdY,QAASA,EAAQG,OAAO,SAACC,EAAOC,GACxB,OAAOA,IAAM7C,SAM7B+B,aAAe,SAACa,GACZ5B,EAAKY,SACG,CAAEY,QAAQvB,OAAA6B,EAAA,EAAA7B,CAAKD,EAAKgB,MAAMQ,SAAjBO,OAAA,CAA0BH,+EAK/C,IACYJ,EAAY5B,KAAKoB,MAAjBQ,QAIX,OAEGvC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBAEXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBAGnBH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,yBAEHH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACXH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,SAAd,yBAGJH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wBACXH,EAAAC,EAAAC,cAAC6C,EAAD,CAAMjB,aAAcnB,KAAKmB,gBAEjC9B,EAAAC,EAAAC,cAAA,WAEAF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wBACXH,EAAAC,EAAAC,cAAC8C,EAAD,CAAOpD,UAAW2C,EACV/B,YAAaG,KAAKH,2BA1DxCK,yBCClBoC,IAASC,OAAOlD,EAAAC,EAAAC,cAACiD,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.82d95316.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\n\r\n\r\n    const TableBody = (props) => {\r\n\r\n        const rowcontents = props.entryData.map( (innerStuff, index) => {\r\n            return(\r\n                <div className=\"tablerow\" key={index} >\r\n                    <div className=\"tablecell greeting\">{innerStuff.greeting}</div>\r\n        \r\n                    <div className=\"tablecell category\">\r\n                        <div className=\"categorytext\">{innerStuff.category}</div>\r\n                        <div className=\"categorytext\"><button className=\"deletebutton\" onClick={() => props.removeEntry(index)}>Delete</button></div>         \r\n                    </div>\r\n                </div>\r\n            );\r\n            }\r\n        )\r\n\r\n    return(<div className=\"tablebody\">{rowcontents}</div>);\r\n    }\r\n\r\n\r\n    class Table extends Component {\r\n       \r\n        render() {\r\n \r\n        const { entryData, removeEntry } = this.props;\r\n    \r\n            return (\r\n            <div className=\"tablearea row\">\r\n                <div className=\"tableofdata\">\r\n\r\n                    <TableBody \r\n                    entryData={entryData}\r\n                    removeEntry={removeEntry}\r\n                    />\r\n               </div>\r\n            </div>\r\n            );\r\n        }\r\n    }\r\n\r\nexport default Table","import React, { Component } from 'react';\r\n\r\nclass Form extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.initialState = {\r\n                greeting: '',\r\n                category: ''\r\n        };\r\n\r\n        this.state = this.initialState;\r\n\r\n    }\r\n\r\n    handleChange = event => {\r\n\r\n        const {name, value} = event.target;\r\n        this.setState( {[name]: value } );\r\n    }\r\n\r\n    submitForm = () => {\r\n        this.props.handleSubmit(this.state); // submit data, using the state of this page\r\n        this.setState(this.initialState); // reset form fields to empty\r\n    }\r\n\r\n    render()\r\n    {\r\n        const {greeting, category} = this.state;\r\n\r\n        return(\r\n        \r\n            <form>\r\n                <div className=\"greetingsarea\">\r\n                    <label>Your Greeting:</label>\r\n                    <textarea\r\n                    name=\"greeting\"\r\n                    value={greeting}\r\n                    onChange={this.handleChange}\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"typecatarea\">\r\n                    <label>What's the Occasion:</label>\r\n                    <input\r\n                        type=\"text\"\r\n                        name=\"category\"\r\n                        value={category}\r\n                        onChange={this.handleChange}\r\n                        />\r\n\r\n                </div>\r\n\r\n                <div className=\"selectcatarea\">\r\n                    <label>or Select an Occasion:</label> \r\n\r\n                    <select value={category} name=\"category\" onChange={this.handleChange}>\r\n                        <option defaultValue value=\"type category here\">Choose one</option>\r\n                        <option value=\"Birthday\">Birthday</option>\r\n                        <option value=\"Christmas\">Christmas</option>\r\n                        <option value=\"Anniversary\">Anniversary</option>\r\n                        <option value=\"Wedding\">Wedding</option>\r\n                    </select> \r\n                </div>\r\n\r\n                <div className=\"submitbuttonarea\" >\r\n                    <input className=\"submitbutton\" type=\"button\" disabled={!(this.state.greeting && this.state.category)}\r\n                                    value=\"Save\"\r\n                                    onClick={this.submitForm}\r\n                                    />\r\n                </div>\r\n\r\n            </form>\r\n        )\r\n\r\n    }\r\n}\r\n\r\nexport default Form","\r\nimport React, {Component} from 'react';\r\nimport Table from './Table';\r\nimport Form from './Form';\r\n\r\nclass App extends Component{\r\n\r\n    state = {\r\n\r\n        entries : [ ]\r\n       \r\n    };\r\n\r\n\r\n    removeEntry = (index) => {\r\n        \r\n        const {entries} = this.state\r\n\r\n        if (window.confirm(\"Delete this greeting?\")) {\r\n            this.setState({\r\n            entries: entries.filter((entry, i ) => {\r\n                    return i !== index;\r\n                })\r\n            });\r\n          }\r\n    }\r\n\r\n    handleSubmit = (entry) => {\r\n        this.setState( \r\n                { entries: [...this.state.entries, entry] }\r\n        )\r\n    }\r\n\r\n    render()\r\n    {\r\n        const { entries } = this.state;\r\n        //const entries = this.state.entries;\r\n        //console.log('entries', entries)\r\n\r\n     return (   \r\n\r\n        <div className=\"container-fluid\">\r\n\r\n            <div className=\"row headercontainer\">\r\n                <div className=\"siteheader\"></div>\r\n                <div className=\"siteheaderbg\"></div>\r\n            </div>\r\n\r\n            <div className=\"container pagecontent\">\r\n\r\n                        <div className=\"row titlearea\">\r\n                            <h1 className=\"title\">Customise your Order</h1>\r\n                        </div>\r\n\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-8 offset-md-2\">\r\n                                <Form handleSubmit={this.handleSubmit}  />\r\n                            </div>\r\n                        <div>\r\n\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-8 offset-md-2\">\r\n                                <Table entryData={entries}\r\n                                        removeEntry={this.removeEntry}\r\n                                        />\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>    \r\n                    \r\n                </div>\r\n            </div>\r\n            \r\n        </div>\r\n\r\n        );\r\n\r\n    }\r\n}\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './index.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\n//serviceWorker.unregister();\n"],"sourceRoot":""}